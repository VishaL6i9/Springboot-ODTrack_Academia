spring:
  application:
    name: odtrack-academia-backend
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:odtrack_academia}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:6190}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAXIMUM_POOL_SIZE:20}
      minimum-idle: ${HIKARI_MINIMUM_IDLE:5}
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  
  security:
    jwt:
      secret: ${JWT_SECRET:your-super-secret-jwt-key-change-this-in-production}
      expiration: ${JWT_EXPIRATION:1800000} # 30 minutes
  
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 10MB

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics,prometheus}
  endpoint:
    health:
      show-details: when-authorized
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    com.academicaffairs.odtrack: ${LOGGING_LEVEL_COM_ACADEMICAFFAIRS_ODTRACK:DEBUG}
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application specific configuration
app:
  security:
    bcrypt-rounds: ${BCRYPT_ROUNDS:12}
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://odtrack.edu}
  
  storage:
    minio:
      endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
      access-key: ${MINIO_ACCESS_KEY:minioadmin}
      secret-key: ${MINIO_SECRET_KEY:minioadmin123}
      bucket-name: ${MINIO_BUCKET_NAME:odtrack-documents}
    
    file-upload-dir: ${FILE_UPLOAD_DIR:./uploads}
    pdf-storage-dir: ${PDF_STORAGE_DIR:./pdfs}
  
  batch:
    timetable-import-cron: ${BATCH_TIMETABLE_IMPORT_CRON:0 0 2 * * ?}
    pdf-cleanup-cron: ${BATCH_PDF_CLEANUP_CRON:0 0 3 * * ?}

---
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/odtrack_academia
  
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

logging:
  level:
    com.academicaffairs.odtrack: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:postgresql://postgres:5432/odtrack_academia

app:
  storage:
    minio:
      endpoint: http://minio:9000

---
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

logging:
  level:
    root: WARN
    com.academicaffairs.odtrack: INFO